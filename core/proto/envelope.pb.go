// Code generated by protoc-gen-gogo.
// source: envelope.proto
// DO NOT EDIT!

/*
Package proto is a generated protocol buffer package.

It is generated from these files:
	envelope.proto
	gantryos.proto
	messages.proto

It has these top-level messages:
*/
package proto

import proto1 "github.com/gogo/protobuf/proto"
import math "math"

// discarding unused import gogoproto "github.com/gogo/protobuf/gogoproto/gogo.pb"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = math.Inf

// Basic messages type so that we can match them easily on both side of the channel
type MessageType int32

const (
	// Send an heartbit from the slave to the master
	// if an heartbit is not received for N seconds, then we consider the slave gone
	MessageType_HEARTBIT MessageType = 0
	// Allow the master to acknowledge the slave
	MessageType_ACK_HEARTBIT MessageType = 1
	// The slave ask to be added to the pool
	MessageType_SLAVE_SUBSCRIBE_REQUEST MessageType = 2
	// Acknowledge that the slave was added
	MessageType_ACK_SLAVE_SUBSCRIBE_REQUEST MessageType = 3
	// the slave offers resources to the master
	MessageType_RESOURCE_OFFER MessageType = 4
	// the slave sends updates abut the resource usage to update the master stats ()
	MessageType_RESOURCE_USAGE MessageType = 5
	// this is the request sent from the master to start a task on a slave
	MessageType_TASK_REQUEST MessageType = 6
	// this is the status of the TASK send from the slaves to the master
	// this is sent everytime a task changes its status on the slaves
	MessageType_TASK_STATUS MessageType = 7
	// this gives information about the slave (hostname for ex)
	MessageType_SLAVE_INFO MessageType = 8
)

var MessageType_name = map[int32]string{
	0: "HEARTBIT",
	1: "ACK_HEARTBIT",
	2: "SLAVE_SUBSCRIBE_REQUEST",
	3: "ACK_SLAVE_SUBSCRIBE_REQUEST",
	4: "RESOURCE_OFFER",
	5: "RESOURCE_USAGE",
	6: "TASK_REQUEST",
	7: "TASK_STATUS",
	8: "SLAVE_INFO",
}
var MessageType_value = map[string]int32{
	"HEARTBIT":                    0,
	"ACK_HEARTBIT":                1,
	"SLAVE_SUBSCRIBE_REQUEST":     2,
	"ACK_SLAVE_SUBSCRIBE_REQUEST": 3,
	"RESOURCE_OFFER":              4,
	"RESOURCE_USAGE":              5,
	"TASK_REQUEST":                6,
	"TASK_STATUS":                 7,
	"SLAVE_INFO":                  8,
}

func (x MessageType) Enum() *MessageType {
	p := new(MessageType)
	*p = x
	return p
}
func (x MessageType) String() string {
	return proto1.EnumName(MessageType_name, int32(x))
}
func (x *MessageType) UnmarshalJSON(data []byte) error {
	value, err := proto1.UnmarshalJSONEnum(MessageType_value, data, "MessageType")
	if err != nil {
		return err
	}
	*x = MessageType(value)
	return nil
}

func init() {
	proto1.RegisterEnum("proto.MessageType", MessageType_name, MessageType_value)
}
